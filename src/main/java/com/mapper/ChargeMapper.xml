<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.ChargeMapper" >
  <resultMap id="BaseResultMap" type="com.bean.Charge" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="order_time" property="orderTime" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="t_member_id" property="tMemberId" jdbcType="INTEGER" />
    <result column="car_plate" property="carPlate" jdbcType="VARCHAR" />
    <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="park_id" property="parkId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="timeType" property="timetype" jdbcType="INTEGER" />
    <result column="orgin_type" property="orginType" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="notify" property="notify" jdbcType="VARCHAR" />
    <result column="coupon_id" property="couponId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, amount, order_time, type, result, t_member_id, car_plate, out_trade_no, 
    park_id, company_id, num, timeType, orgin_type, pay_type, notify, coupon_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bean.ChargeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from charge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from charge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.ChargeExample" >
    delete from charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Charge" >
    insert into charge (id, order_id, amount, 
      order_time, type, result, 
      t_member_id, car_plate, out_trade_no, 
      park_id, company_id, num, 
      timeType, orgin_type, pay_type, 
      notify, coupon_id)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{orderTime,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{tMemberId,jdbcType=INTEGER}, #{carPlate,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{parkId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, 
      #{timetype,jdbcType=INTEGER}, #{orginType,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR}, 
      #{notify,jdbcType=VARCHAR}, #{couponId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Charge" >
    insert into charge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="tMemberId != null" >
        t_member_id,
      </if>
      <if test="carPlate != null" >
        car_plate,
      </if>
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="parkId != null" >
        park_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="timetype != null" >
        timeType,
      </if>
      <if test="orginType != null" >
        orgin_type,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="notify != null" >
        notify,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="tMemberId != null" >
        #{tMemberId,jdbcType=INTEGER},
      </if>
      <if test="carPlate != null" >
        #{carPlate,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="parkId != null" >
        #{parkId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="timetype != null" >
        #{timetype,jdbcType=INTEGER},
      </if>
      <if test="orginType != null" >
        #{orginType,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="notify != null" >
        #{notify,jdbcType=VARCHAR},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.ChargeExample" resultType="java.lang.Integer" >
    select count(*) from charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update charge
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderTime != null" >
        order_time = #{record.orderTime,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.tMemberId != null" >
        t_member_id = #{record.tMemberId,jdbcType=INTEGER},
      </if>
      <if test="record.carPlate != null" >
        car_plate = #{record.carPlate,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null" >
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.parkId != null" >
        park_id = #{record.parkId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.timetype != null" >
        timeType = #{record.timetype,jdbcType=INTEGER},
      </if>
      <if test="record.orginType != null" >
        orgin_type = #{record.orginType,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.notify != null" >
        notify = #{record.notify,jdbcType=VARCHAR},
      </if>
      <if test="record.couponId != null" >
        coupon_id = #{record.couponId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update charge
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      order_time = #{record.orderTime,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      t_member_id = #{record.tMemberId,jdbcType=INTEGER},
      car_plate = #{record.carPlate,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      park_id = #{record.parkId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      timeType = #{record.timetype,jdbcType=INTEGER},
      orgin_type = #{record.orginType,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      notify = #{record.notify,jdbcType=VARCHAR},
      coupon_id = #{record.couponId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Charge" >
    update charge
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="tMemberId != null" >
        t_member_id = #{tMemberId,jdbcType=INTEGER},
      </if>
      <if test="carPlate != null" >
        car_plate = #{carPlate,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null" >
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="parkId != null" >
        park_id = #{parkId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="timetype != null" >
        timeType = #{timetype,jdbcType=INTEGER},
      </if>
      <if test="orginType != null" >
        orgin_type = #{orginType,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="notify != null" >
        notify = #{notify,jdbcType=VARCHAR},
      </if>
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Charge" >
    update charge
    set order_id = #{orderId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      order_time = #{orderTime,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      t_member_id = #{tMemberId,jdbcType=INTEGER},
      car_plate = #{carPlate,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      park_id = #{parkId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      timeType = #{timetype,jdbcType=INTEGER},
      orgin_type = #{orginType,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=VARCHAR},
      notify = #{notify,jdbcType=VARCHAR},
      coupon_id = #{couponId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>