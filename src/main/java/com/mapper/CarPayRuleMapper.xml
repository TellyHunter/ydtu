<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.CarPayRuleMapper" >
  <resultMap id="BaseResultMap" type="com.bean.CarPayRule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rule_name" property="ruleName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="year_fee" property="yearFee" jdbcType="DECIMAL" />
    <result column="season_fee" property="seasonFee" jdbcType="DECIMAL" />
    <result column="month_fee" property="monthFee" jdbcType="DECIMAL" />
    <result column="day_fee" property="dayFee" jdbcType="DECIMAL" />
    <result column="park_id" property="parkId" jdbcType="INTEGER" />
    <result column="local_id" property="localId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, rule_name, type, year_fee, season_fee, month_fee, day_fee, park_id, local_id, 
    remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bean.CarPayRuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_car_pay_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_car_pay_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_car_pay_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.CarPayRuleExample" >
    delete from t_car_pay_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.CarPayRule" >
    insert into t_car_pay_rule (id, rule_name, type, 
      year_fee, season_fee, month_fee, 
      day_fee, park_id, local_id, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{ruleName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{yearFee,jdbcType=DECIMAL}, #{seasonFee,jdbcType=DECIMAL}, #{monthFee,jdbcType=DECIMAL}, 
      #{dayFee,jdbcType=DECIMAL}, #{parkId,jdbcType=INTEGER}, #{localId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.CarPayRule" >
    insert into t_car_pay_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ruleName != null" >
        rule_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="yearFee != null" >
        year_fee,
      </if>
      <if test="seasonFee != null" >
        season_fee,
      </if>
      <if test="monthFee != null" >
        month_fee,
      </if>
      <if test="dayFee != null" >
        day_fee,
      </if>
      <if test="parkId != null" >
        park_id,
      </if>
      <if test="localId != null" >
        local_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ruleName != null" >
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="yearFee != null" >
        #{yearFee,jdbcType=DECIMAL},
      </if>
      <if test="seasonFee != null" >
        #{seasonFee,jdbcType=DECIMAL},
      </if>
      <if test="monthFee != null" >
        #{monthFee,jdbcType=DECIMAL},
      </if>
      <if test="dayFee != null" >
        #{dayFee,jdbcType=DECIMAL},
      </if>
      <if test="parkId != null" >
        #{parkId,jdbcType=INTEGER},
      </if>
      <if test="localId != null" >
        #{localId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.CarPayRuleExample" resultType="java.lang.Integer" >
    select count(*) from t_car_pay_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_car_pay_rule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ruleName != null" >
        rule_name = #{record.ruleName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.yearFee != null" >
        year_fee = #{record.yearFee,jdbcType=DECIMAL},
      </if>
      <if test="record.seasonFee != null" >
        season_fee = #{record.seasonFee,jdbcType=DECIMAL},
      </if>
      <if test="record.monthFee != null" >
        month_fee = #{record.monthFee,jdbcType=DECIMAL},
      </if>
      <if test="record.dayFee != null" >
        day_fee = #{record.dayFee,jdbcType=DECIMAL},
      </if>
      <if test="record.parkId != null" >
        park_id = #{record.parkId,jdbcType=INTEGER},
      </if>
      <if test="record.localId != null" >
        local_id = #{record.localId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_car_pay_rule
    set id = #{record.id,jdbcType=INTEGER},
      rule_name = #{record.ruleName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      year_fee = #{record.yearFee,jdbcType=DECIMAL},
      season_fee = #{record.seasonFee,jdbcType=DECIMAL},
      month_fee = #{record.monthFee,jdbcType=DECIMAL},
      day_fee = #{record.dayFee,jdbcType=DECIMAL},
      park_id = #{record.parkId,jdbcType=INTEGER},
      local_id = #{record.localId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.CarPayRule" >
    update t_car_pay_rule
    <set >
      <if test="ruleName != null" >
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="yearFee != null" >
        year_fee = #{yearFee,jdbcType=DECIMAL},
      </if>
      <if test="seasonFee != null" >
        season_fee = #{seasonFee,jdbcType=DECIMAL},
      </if>
      <if test="monthFee != null" >
        month_fee = #{monthFee,jdbcType=DECIMAL},
      </if>
      <if test="dayFee != null" >
        day_fee = #{dayFee,jdbcType=DECIMAL},
      </if>
      <if test="parkId != null" >
        park_id = #{parkId,jdbcType=INTEGER},
      </if>
      <if test="localId != null" >
        local_id = #{localId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.CarPayRule" >
    update t_car_pay_rule
    set rule_name = #{ruleName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      year_fee = #{yearFee,jdbcType=DECIMAL},
      season_fee = #{seasonFee,jdbcType=DECIMAL},
      month_fee = #{monthFee,jdbcType=DECIMAL},
      day_fee = #{dayFee,jdbcType=DECIMAL},
      park_id = #{parkId,jdbcType=INTEGER},
      local_id = #{localId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>